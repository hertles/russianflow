{"version":3,"sources":["components/EditProfile/EditProfile.module.css","components/Common/SpanField/SpanField.module.css","components/Common/Dropzone/Dropzone.jsx","components/Common/SpanField/SpanField.jsx","components/EditProfile/EditProfile.jsx","utils/hoc/AuthRedirect.jsx","components/EditProfile/EditProfileContainer.jsx"],"names":["module","exports","Dropzone","props","useState","files","setFiles","useDropzone","accept","multiple","noDrag","onDrop","acceptedFiles","onChange","getRootProps","getInputProps","photo","setPhoto","useEffect","length","type","includes","URL","createObjectURL","photos","large","className","style","profilePhoto","src","alt","id","choosePhotoSpan","SpanField","validators","MaxLengthCreator","required","composeValidators","NotEmpty","isUrl","IsUrl","name","component","autocomplete","validate","input","meta","inputBlock","info","span","error","touched","autoComplete","placeholder","EditProfile","profile","userId","isFetching","LogoutFromAPI","ApplyChanges","saved","to","Preloader","lookingForAJob","Button","text","fullName","onSubmit","initialValues","status","lookingForAJobDescription","aboutMe","website","contacts","github","vk","youtube","facebook","twitter","instagram","mainLink","render","handleSubmit","values","form","photoContainer","choosePhotoInput","buttonsBlock","apply","value","onClick","mapStateToProps","state","isAuth","Auth","AuthRedirect","Component","connect","EditProfileContainer","React","memo","setSaved","useLayoutEffect","GetUser","SetStatus","SetPhoto","newProfileData","SetProfile","setTimeout","prevProps","nextProps","mapDispatchToProps","compose","Profile","isGettingFollowed"],"mappings":"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","file":"static/js/3.daf7db11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditProfile\":\"EditProfile_EditProfile__TB5L8\",\"photoContainer\":\"EditProfile_photoContainer__39Lp_\",\"choosePhotoSpan\":\"EditProfile_choosePhotoSpan__1HyfT\",\"choosePhotoInput\":\"EditProfile_choosePhotoInput__3ezpf\",\"profilePhoto\":\"EditProfile_profilePhoto__2gi28\",\"info\":\"EditProfile_info__XTu2R\",\"form\":\"EditProfile_form__2JE_-\",\"apply\":\"EditProfile_apply__1ocSw\",\"buttonsBlock\":\"EditProfile_buttonsBlock__2YDGf\",\"saved\":\"EditProfile_saved__2KSKv\",\"save\":\"EditProfile_save__1L6kA\",\"statusInputBlock\":\"EditProfile_statusInputBlock__38OcY\",\"statusInput\":\"EditProfile_statusInput__2l2bC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"SpanField_info__dT0ko\",\"inputBlock\":\"SpanField_inputBlock__35uAM\",\"input\":\"SpanField_input__LJgq_\"};","import React, {useEffect, useState} from \"react\";\r\nimport style from \"../../EditProfile/EditProfile.module.css\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nexport let Dropzone = props => {\r\n    const [files, setFiles] = useState()\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: \"image/*\",\r\n        multiple: false,\r\n        noDrag: true,\r\n        onDrop: (acceptedFiles) => {\r\n            const files = [...acceptedFiles]\r\n            setFiles(files);\r\n            if (props.onChange) {\r\n                props.onChange(files);\r\n            }\r\n        }}\r\n    );\r\n    const [photo,setPhoto]=useState()\r\n    useEffect(()=>{\r\n        if (files){\r\n            if (files.length===1 && !files[0].type.includes('gif')){\r\n                setPhoto(URL.createObjectURL(files[0]))\r\n            }\r\n        }\r\n        else {\r\n            let photo = props.photos.large ? props.photos.large : 'https://gotrening.com/wp-content/uploads/2021/04/user.png'\r\n            setPhoto(photo)\r\n        }\r\n    },[files])\r\n    return <div {...getRootProps({className: 'dropzone'})}><img\r\n        className={style.profilePhoto} src={photo}\r\n        alt=\"your profile image\"/><input className={\"choosePhotoInput\"} id={\"choosePhotoInput\"} {...getInputProps()}/><span className={style.choosePhotoSpan}>Выбрать фото</span></div>\r\n}","import React from 'react';\r\nimport {composeValidators, IsUrl, MaxLengthCreator, NotEmpty} from \"../../../utils/validators/fieldValidators\";\r\nimport style from \"./SpanField.module.css\";\r\nimport {Field} from \"react-final-form\";\r\n\r\nfunction SpanField(props) {\r\n    let validators=MaxLengthCreator(60)\r\n    if (props.required)\r\n        validators=composeValidators(NotEmpty,MaxLengthCreator(60))\r\n    if (props.isUrl)\r\n        validators=composeValidators(IsUrl,MaxLengthCreator(60))\r\n    return (\r\n        <Field name={props.name} component={\"input\"} type={\"text\"}\r\n               autocomplete=\"off\" validate={validators}>\r\n            {({ input, meta }) => (\r\n                <div className={style.inputBlock}>\r\n                    <div className={style.info}>\r\n                        <div>{props.span}:</div><div><input {...input} className={`${style.input} ${meta.error && meta.touched && \"errorInput\"}`} type=\"text\" autoComplete=\"false\" placeholder={props.placeholder || \"\"} /></div>\r\n                        {meta.error && meta.touched && <span className={`errorMessage ${style.info}`}>{meta.error}</span>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n}\r\n\r\nexport default SpanField;","import style from './EditProfile.module.css'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Button from \"../Common/Button/Button\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, Form} from 'react-final-form'\r\nimport {Dropzone} from \"../Common/Dropzone/Dropzone\";\r\nimport SpanField from \"../Common/SpanField/SpanField\";\r\n\r\n\r\nlet EditProfile = ({profile, userId, isFetching, LogoutFromAPI, ApplyChanges, saved}) => {\r\n    if (!userId) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n    if (isFetching) {\r\n        return <div className={`${style.EditProfile} backgroundBlock`}><Preloader/></div>\r\n    }\r\n    let lookingForAJobString = false\r\n    lookingForAJobString = profile.lookingForAJob ? 'Ищет работу' : 'Не ищет работу'\r\n    return <div className={`${style.EditProfile} backgroundBlock`}><Button text={profile.fullName}/>\r\n\r\n        <Form onSubmit={ApplyChanges}\r\n              initialValues={{\r\n                  status: profile.status,\r\n                  lookingForAJob: profile.lookingForAJob,\r\n                  fullName: profile.fullName,\r\n                  lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                  aboutMe: profile.aboutMe,\r\n                  website: profile.contacts.website,\r\n                  github: profile.contacts.github,\r\n                  vk: profile.contacts.vk,\r\n                  youtube: profile.contacts.youtube,\r\n                  facebook: profile.contacts.facebook,\r\n                  twitter: profile.contacts.twitter,\r\n                  instagram: profile.contacts.instagram,\r\n                  mainLink: profile.contacts.mainLink,\r\n\r\n              }}\r\n              render={({handleSubmit, values}) => (\r\n                  <form className={style.form} onSubmit={handleSubmit}>\r\n                      <div className={style.photoContainer}>\r\n                          <Field name={\"photo\"} className={style.choosePhotoInput} component={\"input\"}\r\n                                 type=\"file\">{props => <Dropzone {...props.input} photos={profile.photos}/>}</Field>\r\n                      </div>\r\n                      <SpanField name={\"status\"} span={\"Статус\"}/>\r\n                      <SpanField name={\"aboutMe\"} span={\"Обо мне\"} required={true}/>\r\n                      <SpanField name={\"fullName\"} span={\"Полное имя\"} required={true}/>\r\n                      <SpanField name={\"website\"} span={\"Веб-сайт\"} isUrl={true}/>\r\n                      <SpanField name={\"github\"} span={\"GitHub\"} isUrl={true}/>\r\n                      <SpanField name={\"vk\"} span={\"ВК\"} isUrl={true}/>\r\n                      <SpanField name={\"youtube\"} span={\"Youtube\"} isUrl={true}/>\r\n                      <SpanField name={\"facebook\"} span={\"Facebook\"} isUrl={true}/>\r\n                      <SpanField name={\"twitter\"} span={\"Twitter\"} isUrl={true}/>\r\n                      <SpanField name={\"instagram\"} span={\"Instagram\"} isUrl={true}/>\r\n                      <SpanField name={\"mainLink\"} span={\"Дополнительная ссылка\"} isUrl={true}/>\r\n                      <div className={style.info}>Ищу работу: <Field className=\"checkbox\" name=\"lookingForAJob\"\r\n                                                                     component=\"input\" type=\"checkbox\"/></div>\r\n                      <SpanField name={\"lookingForAJobDescription\"} span={\"Профессиональные навыки\"} required={true}/>\r\n                      <div className={style.buttonsBlock}>\r\n                          <input type={\"submit\"} className={`${style.apply} Button`}\r\n                                 value=\"Сохранить\"/>\r\n                          <NavLink to={'/user/' + profile.userId}><input type={\"button\"}\r\n                                                                         className={`${style.apply} Button`}\r\n                                                                         value=\"Посмотреть мой профиль\"/></NavLink>\r\n                          <Button className={`${style.apply} Button`} onClick={LogoutFromAPI} text={\"Выйти\"}/>\r\n                          {saved ? <div className={style.saved}>Сохранено</div> : <div></div>}\r\n                      </div>\r\n                  </form>\r\n              )}/>\r\n    </div>\r\n}\r\nexport default EditProfile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nlet mapStateToProps=(state)=>({\r\n    isAuth: state.Auth.isAuth\r\n})\r\nlet AuthRedirect = (Component) =>{\r\n    let RedirectContainer = (props) =>{\r\n        if (!props.isAuth){\r\n            return <Redirect to={'login'}/>\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectContainer)\r\n}\r\nexport default AuthRedirect","import EditProfile from './EditProfile'\r\nimport {connect} from 'react-redux'\r\nimport React, {useEffect, useLayoutEffect, useState} from 'react'\r\nimport {compose} from \"redux\";\r\nimport {GetUser, SetStatus, SetPhoto, SetProfile} from \"../../Redux/ProfileReducer\";\r\nimport {LogoutFromAPI} from \"../../Redux/AuthReducer\";\r\nimport AuthRedirect from \"../../utils/hoc/AuthRedirect\";\r\n\r\nconst EditProfileContainer = React.memo((props) => {\r\n    const [saved, setSaved] = useState(false)\r\n    let ApplyChanges = (values) => {\r\n        if (values.status !== props.status) {\r\n            props.SetStatus(values.status)\r\n        }\r\n        if (values.photo) {\r\n            let photo = [...values.photo][0]\r\n            props.SetPhoto(photo)\r\n        }\r\n        let newProfileData = {\r\n            userId: props.userId,\r\n            lookingForAJob: values.lookingForAJob,\r\n            aboutMe: values.aboutMe,\r\n            lookingForAJobDescription: values.lookingForAJobDescription,\r\n            fullName: values.fullName,\r\n            contacts: {\r\n                github: values.github,\r\n                vk: values.vk,\r\n                facebook: values.facebook,\r\n                instagram: values.instagram,\r\n                twitter: values.twitter,\r\n                youtube: values.youtube,\r\n                mainLink: values.mainLink,\r\n                website: values.website\r\n            }\r\n        }\r\n        props.SetProfile(newProfileData)\r\n        setSaved(true)\r\n        setTimeout(() => {\r\n            setSaved(false)\r\n        }, 2000)\r\n    }\r\n    useLayoutEffect(() => {\r\n        props.GetUser(props.userId)\r\n    }, [props.userId]);\r\n\r\n    return (\r\n        <EditProfile {...props} saved={saved} ApplyChanges={ApplyChanges}/>\r\n    )\r\n}, (prevProps, nextProps) => prevProps.userId === nextProps.userId && prevProps.isFetching === nextProps.isFetching)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.Profile.profile,\r\n    userId: state.Auth.userId,\r\n    isFetching: state.Profile.isFetching,\r\n    isGettingFollowed: state.Profile.isGettingFollowed\r\n})\r\nlet mapDispatchToProps = {\r\n    GetUser,\r\n    SetStatus,\r\n    SetPhoto,\r\n    LogoutFromAPI,\r\n    SetProfile\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirect\r\n)(EditProfileContainer)"],"sourceRoot":""}