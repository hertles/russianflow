{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","Login","props","history","useHistory","onSubmit","formData","a","LoginToAPI","email","password","rememberMe","goBack","className","style","header","initialValues","render","handleSubmit","LoginForm","validate","NotEmpty","authInput","name","input","meta","error","touched","type","autoComplete","placeholder","lastLine","component","RegAuth","target","href","submit","value","LoginContainer","this","isAuth","to","React","Component","mapDispatchToProps","compose","connect","state","Auth","userId"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,QAAU,uBAAuB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,0JC8CvLC,EAzCD,SAACC,GACX,IAAMC,EAAQC,cACRC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACPL,EAAMM,WAAWF,EAASG,MAAMH,EAASI,SAASJ,EAASK,YADpD,OAEbR,EAAQS,SAFK,2CAAH,sDAId,OAAO,sBAAKC,UAAS,UAAKC,IAAMb,MAAX,oBAAd,UACH,oBAAIY,UAAWC,IAAMC,OAArB,gFACA,cAAC,IAAD,CAAMV,SAAUA,EACVW,cAAe,CAACL,YAAY,GAClCM,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OACJ,uBAAML,UAAWC,IAAMK,UAAWd,SAAUa,EAA5C,UACI,cAAC,IAAD,CAAOE,SAAUC,IAAUR,UAAWC,IAAMQ,UAAWC,KAAM,QAA7D,SACK,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,gCACI,8BACI,iDAAWD,GAAX,IAAkBX,UAAS,UAAKC,IAAMQ,UAAX,YAAwBG,EAAKC,OAASD,EAAKE,SAAW,cAAgBC,KAAK,OAAOC,aAAa,QAAQC,YAAY,aAElJ,8BACKL,EAAKC,OAASD,EAAKE,SAAW,sBAAMd,UAAW,eAAjB,SAAkCY,EAAKC,gBAKtF,cAAC,IAAD,CAAON,SAAUC,IAAUR,UAAWC,IAAMQ,UAAWC,KAAM,WAA7D,SACK,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,gCACI,8BACI,iDAAWD,GAAX,IAAkBX,UAAS,UAAKC,IAAMQ,UAAX,YAAwBG,EAAKC,OAASD,EAAKE,SAAW,cAAgBC,KAAK,WAAWC,aAAa,QAAQC,YAAY,4CAEtJ,8BACKL,EAAKC,OAASD,EAAKE,SAAW,sBAAMd,UAAW,eAAjB,SAAkCY,EAAKC,gBAKtF,sBAAKb,UAAWC,IAAMiB,SAAtB,UAAgC,gCAAK,qHAA8B,cAAC,IAAD,CAAOR,KAAK,aAAaS,UAAW,QAASJ,KAAM,WAAYf,UAAW,gBAAmB,sBAAKA,UAAWC,IAAMmB,QAAtB,UAA+B,mBAAGC,OAAQ,SAAUC,KAAM,8CAA3B,SAA0E,qBAAKtB,UAAS,iBAAYC,IAAMsB,QAAhC,kFAA+D,uBAAOR,KAAM,SAAUf,UAAS,iBAAYC,IAAMsB,QAAUC,MAAO,mD,uCCpCrZC,E,uKACF,c,oBAGA,WACI,OAAIC,KAAKrC,MAAMsC,OACJ,cAAC,IAAD,CAAUC,GAAI,kBAGrB,cAAC,EAAD,eAAWF,KAAKrC,Y,GATCwC,IAAMC,WAiB/BC,EAAqB,CACrBpC,gBAEWqC,4BACXC,aARkB,SAACC,GAAD,MAAY,CAC9BP,OAAQO,EAAMC,KAAKR,OACnBS,OAAQF,EAAMC,KAAKC,UAMKL,GADbC,CAEbP","file":"static/js/4.3ea7e959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__KgGiO\",\"authInput\":\"Login_authInput__3dVEC\",\"RegAuth\":\"Login_RegAuth__3gf_t\",\"lastLine\":\"Login_lastLine__1cMnh\",\"LoginForm\":\"Login_LoginForm__2MS9Y\",\"header\":\"Login_header__oDf7V\"};","\r\nimport style from \"./Login.module.css\"\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {NotEmpty} from \"../../utils/validators/fieldValidators\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Login = (props)=>{\r\n    const history=useHistory()\r\n    const onSubmit = async (formData) =>{\r\n        await props.LoginToAPI(formData.email,formData.password,formData.rememberMe)\r\n        history.goBack()\r\n    }\r\n    return <div className={`${style.Login} backgroundBlock`}>\r\n        <h3 className={style.header}>Авторизация</h3>\r\n        <Form onSubmit={onSubmit}\r\n              initialValues={{rememberMe: false}}\r\n        render={({handleSubmit})=>(\r\n            <form className={style.LoginForm} onSubmit={handleSubmit}>\r\n                <Field validate={NotEmpty} className={style.authInput} name={'email'}>\r\n                    {({ input, meta }) => (\r\n                        <div>\r\n                            <div>\r\n                                <input {...input} className={`${style.authInput} ${meta.error && meta.touched && \"errorInput\"}`} type=\"text\" autoComplete=\"false\" placeholder=\"EMail\" />\r\n                            </div>\r\n                            <div>\r\n                                {meta.error && meta.touched && <span className={\"errorMessage\"}>{meta.error}</span>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n                <Field validate={NotEmpty} className={style.authInput} name={'password'}>\r\n                    {({ input, meta }) => (\r\n                        <div>\r\n                            <div>\r\n                                <input {...input} className={`${style.authInput} ${meta.error && meta.touched && \"errorInput\"}`} type=\"password\" autoComplete=\"false\" placeholder=\"Пароль\" />\r\n                            </div>\r\n                            <div>\r\n                                {meta.error && meta.touched && <span className={\"errorMessage\"}>{meta.error}</span>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n                <div className={style.lastLine}><div><label>Запомнить меня </label><Field name=\"rememberMe\" component={\"input\"} type={\"checkbox\"} className={\"checkbox\"}/></div><div className={style.RegAuth}><a target={\"_blank\"} href={\"https://social-network.samuraijs.com/signUp\"}><div className={`Button ${style.submit}`}>Регистрация</div></a><input type={\"submit\"} className={`Button ${style.submit}`} value={\"Войти\"}/></div></div>\r\n            </form>\r\n        )}/>\r\n    </div>\r\n}\r\nexport default Login","import Login from './Login'\r\nimport {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport {compose} from \"redux\";\r\nimport {LoginToAPI} from \"../../Redux/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nclass LoginContainer extends React.Component{\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        if (this.props.isAuth){\r\n            return <Redirect to={\"/edit_profile\"}/>\r\n        }\r\n        return(\r\n            <Login {...this.props}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    userId: state.Auth.userId\r\n})\r\nlet mapDispatchToProps = {\r\n    LoginToAPI\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(LoginContainer)"],"sourceRoot":""}