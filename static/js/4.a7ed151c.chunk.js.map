{"version":3,"sources":["components/Common/SpanField/SpanField.jsx","components/Common/SpanField/SpanField.module.scss","components/EditProfile/EditProfile.module.scss","components/Common/Dropzone/Dropzone.jsx","components/EditProfile/EditProfile.jsx","utils/hoc/AuthRedirect.jsx","components/EditProfile/EditProfileContainer.jsx"],"names":["SpanField","props","validators","MaxLengthCreator","required","composeValidators","NotEmpty","isUrl","IsUrl","type","autoComplete","name","component","validate","input","meta","className","classNames","style","inputBlock","span","error","submitError","touched","placeholder","module","exports","Dropzone","useState","files","setFiles","useDropzone","accept","multiple","noDrag","onDrop","acceptedFiles","onChange","getRootProps","getInputProps","photo","setPhoto","useEffect","length","includes","URL","createObjectURL","photos","large","profilePhoto","src","alt","id","choosePhotoSpan","EditProfile","profile","userId","isFetching","LogoutFromAPI","ApplyChanges","saved","Preloader","Button","text","fullName","onSubmit","initialValues","status","lookingForAJob","lookingForAJobDescription","aboutMe","website","contacts","github","vk","youtube","facebook","twitter","instagram","mainLink","render","handleSubmit","values","form","photoContainer","choosePhotoInput","info","buttonsBlock","apply","value","to","onClick","mapStateToProps","state","isAuth","Auth","AuthRedirect","Component","connect","EditProfileContainer","React","memo","setSaved","useLayoutEffect","GetUser","SetStatus","SetPhoto","ChangeLogin","newProfileData","SetProfile","setTimeout","prevProps","nextProps","mapDispatchToProps","compose","Profile","isGettingFollowed"],"mappings":"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","file":"static/js/4.a7ed151c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {composeValidators, IsUrl, MaxLengthCreator, NotEmpty} from \"../../../utils/validators/fieldValidators\";\r\nimport style from \"./SpanField.module.scss\";\r\nimport {Field} from \"react-final-form\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction SpanField(props) {\r\n\r\n    let validators=MaxLengthCreator(60)\r\n    if (props.required)\r\n        validators=composeValidators(NotEmpty,MaxLengthCreator(60))\r\n    if (props.isUrl)\r\n        validators=composeValidators(IsUrl,MaxLengthCreator(60))\r\n    return (\r\n        <Field type={props.type || \"text\"} autoComplete=\"off\" name={props.name} component={\"input\"}\r\n                validate={validators}>\r\n            {({ input, meta }) => (\r\n                <div className={classNames(style.inputBlock, props.className)}>\r\n                        {props.span && <div>{props.span}</div>}<div><input {...input} className={`${style.input} ${(meta.error || meta.submitError) && meta.touched && \"errorInput\"}`} autoComplete=\"false\" placeholder={props.placeholder || \"\"} /></div>\r\n                        {meta.error && meta.touched && <span className={`errorMessage`}>{meta.error}</span>}\r\n                        {meta.submitError && meta.touched && <span className={`errorMessage`}>{meta.submitError}</span>}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n}\r\n\r\nexport default SpanField;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"SpanField_inputBlock__3seZH\",\"input\":\"SpanField_input__1gH1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditProfile\":\"EditProfile_EditProfile__2dLPr\",\"photoContainer\":\"EditProfile_photoContainer__1vcJs\",\"choosePhotoSpan\":\"EditProfile_choosePhotoSpan__31uru\",\"choosePhotoInput\":\"EditProfile_choosePhotoInput__crPfJ\",\"profilePhoto\":\"EditProfile_profilePhoto__hrF_G\",\"info\":\"EditProfile_info__2brkV\",\"form\":\"EditProfile_form__MI4Hh\",\"apply\":\"EditProfile_apply__3cnHS\",\"buttonsBlock\":\"EditProfile_buttonsBlock__1tJ6D\",\"saved\":\"EditProfile_saved__12nxU\",\"save\":\"EditProfile_save__3bVnI\"};","import React, {useEffect, useState} from \"react\";\r\nimport style from \"../../EditProfile/EditProfile.module.scss\";\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\nexport let Dropzone = props => {\r\n    const [files, setFiles] = useState()\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: \"image/*\",\r\n        multiple: false,\r\n        noDrag: true,\r\n        onDrop: (acceptedFiles) => {\r\n            const files = [...acceptedFiles]\r\n            setFiles(files);\r\n            if (props.onChange) {\r\n                props.onChange(files);\r\n            }\r\n        }}\r\n    );\r\n    const [photo,setPhoto]=useState()\r\n    useEffect(()=>{\r\n        if (files){\r\n            if (files.length===1 && !files[0].type.includes('gif')){\r\n                setPhoto(URL.createObjectURL(files[0]))\r\n            }\r\n        }\r\n        else {\r\n            let photo = props.photos.large ? props.photos.large : 'https://gotrening.com/wp-content/uploads/2021/04/user.png'\r\n            setPhoto(photo)\r\n        }\r\n    },[files])\r\n    return <div {...getRootProps({className: 'dropzone'})}><img\r\n        className={style.profilePhoto} src={photo}\r\n        alt=\"your profile image\"/><input className={\"choosePhotoInput\"} id={\"choosePhotoInput\"} {...getInputProps()}/><span className={style.choosePhotoSpan}>Выбрать фото</span></div>\r\n}","import style from './EditProfile.module.scss'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Button from \"../Common/Button/Button\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, Form} from 'react-final-form'\r\nimport {Dropzone} from \"../Common/Dropzone/Dropzone\";\r\nimport SpanField from \"../Common/SpanField/SpanField\";\r\n\r\n\r\nlet EditProfile = ({profile, userId, isFetching, LogoutFromAPI, ApplyChanges, saved}) => {\r\n    if (!userId) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n    if (isFetching) {\r\n        return <div className={`${style.EditProfile} backgroundBlock`}><Preloader/></div>\r\n    }\r\n    return <div className={`${style.EditProfile} backgroundBlock`}><Button text={profile.fullName}/>\r\n        <Form onSubmit={ApplyChanges}\r\n              initialValues={{\r\n                  status: profile.status,\r\n                  lookingForAJob: profile.lookingForAJob,\r\n                  fullName: profile.fullName,\r\n                  lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                  aboutMe: profile.aboutMe,\r\n                  website: profile.contacts.website,\r\n                  github: profile.contacts.github,\r\n                  vk: profile.contacts.vk,\r\n                  youtube: profile.contacts.youtube,\r\n                  facebook: profile.contacts.facebook,\r\n                  twitter: profile.contacts.twitter,\r\n                  instagram: profile.contacts.instagram,\r\n                  mainLink: profile.contacts.mainLink,\r\n              }}\r\n              render={({handleSubmit, values}) => (\r\n                  <form className={style.form} onSubmit={handleSubmit}>\r\n                      <div className={style.photoContainer}>\r\n                          <Field name={\"photo\"} className={style.choosePhotoInput} component={\"input\"}\r\n                                 type=\"file\">{props => <Dropzone {...props.input} photos={profile.photos}/>}</Field>\r\n                      </div>\r\n                      <SpanField name={\"status\"} span={\"Статус\"}/>\r\n                      <SpanField name={\"aboutMe\"} span={\"Обо мне\"} required={true}/>\r\n                      <SpanField name={\"fullName\"} span={\"Имя\"} required={true}/>\r\n                      <SpanField name={\"website\"} span={\"Веб-сайт\"} isUrl={true}/>\r\n                      <SpanField name={\"github\"} span={\"GitHub\"} isUrl={true}/>\r\n                      <SpanField name={\"vk\"} span={\"ВК\"} isUrl={true}/>\r\n                      <SpanField name={\"youtube\"} span={\"Youtube\"} isUrl={true}/>\r\n                      <SpanField name={\"facebook\"} span={\"Facebook\"} isUrl={true}/>\r\n                      <SpanField name={\"twitter\"} span={\"Twitter\"} isUrl={true}/>\r\n                      <SpanField name={\"instagram\"} span={\"Instagram\"} isUrl={true}/>\r\n                      <SpanField name={\"mainLink\"} span={\"Дополнительная ссылка\"} isUrl={true}/>\r\n                      <div className={style.info}>Ищу работу: <Field className=\"checkbox\" name=\"lookingForAJob\"\r\n                                                                     component=\"input\" type=\"checkbox\"/></div>\r\n                      <SpanField name={\"lookingForAJobDescription\"} span={\"Профессиональные навыки\"} required={true}/>\r\n                      <div className={style.buttonsBlock}>\r\n                          <input type={\"submit\"} className={`${style.apply} Button`}\r\n                                 value=\"Сохранить\"/>\r\n                          <NavLink to={'/user/' + profile.userId+'/'}><input type={\"button\"}\r\n                                                                         className={`${style.apply} Button`}\r\n                                                                         value=\"Посмотреть мой профиль\"/></NavLink>\r\n                          <Button className={`${style.apply} Button`} onClick={LogoutFromAPI} text={\"Выйти\"}/>\r\n                          {saved ? <div className={style.saved}>Сохранено</div> : null}\r\n                      </div>\r\n                  </form>\r\n              )}/>\r\n    </div>\r\n}\r\nexport default EditProfile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nlet mapStateToProps=(state)=>({\r\n    isAuth: state.Auth.isAuth\r\n})\r\nlet AuthRedirect = (Component) =>{\r\n    let RedirectContainer = (props) =>{\r\n        if (!props.isAuth){\r\n            return <Redirect to={'login'}/>\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectContainer)\r\n}\r\nexport default AuthRedirect","import EditProfile from './EditProfile'\r\nimport {connect} from 'react-redux'\r\nimport React, {useEffect, useLayoutEffect, useState} from 'react'\r\nimport {compose} from \"redux\";\r\nimport {GetUser, SetStatus, SetPhoto, SetProfile} from \"../../Redux/ProfileReducer\";\r\nimport {ChangeLogin, LogoutFromAPI} from \"../../Redux/AuthReducer\";\r\nimport AuthRedirect from \"../../utils/hoc/AuthRedirect\";\r\n\r\nconst EditProfileContainer = React.memo((props) => {\r\n    const [saved, setSaved] = useState(false)\r\n    let ApplyChanges = (values) => {\r\n        if (values.status !== props.status) {\r\n            props.SetStatus(values.status)\r\n        }\r\n        if (values.photo) {\r\n            let photo = [...values.photo][0]\r\n            props.SetPhoto(photo)\r\n        }\r\n        if (props.profile.fullName!==values.fullName){\r\n            props.ChangeLogin(values.fullName)\r\n        }\r\n        let newProfileData = {\r\n            userId: props.userId,\r\n            lookingForAJob: values.lookingForAJob,\r\n            aboutMe: values.aboutMe,\r\n            lookingForAJobDescription: values.lookingForAJobDescription,\r\n            fullName: values.fullName,\r\n            contacts: {\r\n                github: values.github,\r\n                vk: values.vk,\r\n                facebook: values.facebook,\r\n                instagram: values.instagram,\r\n                twitter: values.twitter,\r\n                youtube: values.youtube,\r\n                mainLink: values.mainLink,\r\n                website: values.website\r\n            }\r\n        }\r\n        props.SetProfile(newProfileData)\r\n        setSaved(true)\r\n        setTimeout(() => {\r\n            setSaved(false)\r\n        }, 2000)\r\n    }\r\n    useLayoutEffect(() => {\r\n        props.GetUser(props.userId)\r\n    }, [props.userId]);\r\n\r\n    return (\r\n        <EditProfile {...props} saved={saved} ApplyChanges={ApplyChanges}/>\r\n    )\r\n}, (prevProps, nextProps) => prevProps.userId === nextProps.userId && prevProps.isFetching === nextProps.isFetching)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.Profile.profile,\r\n    userId: state.Auth.userId,\r\n    isFetching: state.Profile.isFetching,\r\n    isGettingFollowed: state.Profile.isGettingFollowed\r\n})\r\nlet mapDispatchToProps = {\r\n    GetUser,\r\n    SetStatus,\r\n    SetPhoto,\r\n    LogoutFromAPI,\r\n    SetProfile,\r\n    ChangeLogin\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirect\r\n)(EditProfileContainer)"],"sourceRoot":""}