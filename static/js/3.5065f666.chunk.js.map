{"version":3,"sources":["components/Common/SpanField/SpanField.jsx","components/Common/SpanField/SpanField.module.css","../node_modules/classnames/index.js","components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["SpanField","props","validators","MaxLengthCreator","required","composeValidators","NotEmpty","isUrl","IsUrl","type","autoComplete","name","component","validate","input","meta","className","classNames","style","inputBlock","span","error","submitError","touched","placeholder","module","exports","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","default","Login","useHistory","onSubmit","formData","a","LoginToAPI","email","password","rememberMe","captcha","console","log","FORM_ERROR","header","initialValues","render","handleSubmit","LoginForm","authInput","captchaUrl","alt","src","lastLine","RegAuth","target","href","submit","value","LoginContainer","this","isAuth","to","React","Component","mapDispatchToProps","compose","connect","state","Auth","userId"],"mappings":"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","file":"static/js/3.5065f666.chunk.js","sourcesContent":["import React from 'react';\r\nimport {composeValidators, IsUrl, MaxLengthCreator, NotEmpty} from \"../../../utils/validators/fieldValidators\";\r\nimport style from \"./SpanField.module.css\";\r\nimport {Field} from \"react-final-form\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction SpanField(props) {\r\n\r\n    let validators=MaxLengthCreator(60)\r\n    if (props.required)\r\n        validators=composeValidators(NotEmpty,MaxLengthCreator(60))\r\n    if (props.isUrl)\r\n        validators=composeValidators(IsUrl,MaxLengthCreator(60))\r\n    return (\r\n        <Field type={props.type || \"text\"} autoComplete=\"off\" name={props.name} component={\"input\"}\r\n                validate={validators}>\r\n            {({ input, meta }) => (\r\n                <div className={classNames(style.inputBlock, props.className)}>\r\n                        {props.span && <div>{props.span}</div>}<div><input {...input} className={`${style.input} ${(meta.error || meta.submitError) && meta.touched && \"errorInput\"}`} autoComplete=\"false\" placeholder={props.placeholder || \"\"} /></div>\r\n                        {meta.error && meta.touched && <span className={`errorMessage`}>{meta.error}</span>}\r\n                        {meta.submitError && meta.touched && <span className={`errorMessage`}>{meta.submitError}</span>}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n}\r\n\r\nexport default SpanField;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"SpanField_inputBlock__35uAM\",\"input\":\"SpanField_input__LJgq_\"};","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__KgGiO\",\"authInput\":\"Login_authInput__3dVEC\",\"RegAuth\":\"Login_RegAuth__3gf_t\",\"lastLine\":\"Login_lastLine__1cMnh\",\"LoginForm\":\"Login_LoginForm__2MS9Y\",\"header\":\"Login_header__oDf7V\",\"captcha\":\"Login_captcha__mlQaI\"};","\r\nimport style from \"./Login.module.css\"\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {NotEmpty} from \"../../utils/validators/fieldValidators\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {FORM_ERROR} from \"final-form\";\r\nimport SpanField from \"../Common/SpanField/SpanField\";\r\nimport React from \"react\";\r\n\r\nconst Login = (props)=>{\r\n    const history=useHistory()\r\n    let error = ''\r\n    const onSubmit = async (formData) =>{\r\n        error = await props.LoginToAPI(formData.email,formData.password,formData.rememberMe,formData.captcha)\r\n        console.log(error)\r\n        switch (error) {\r\n            case \"Incorrect Email or Password\":\r\n                return {[FORM_ERROR]: \"Неверный пароль или логин\"}\r\n            case \"Enter valid Email\":\r\n                return {email: \"Введите корректный EMail\"}\r\n            case \"Incorrect anti-bot symbols\":\r\n                return {[FORM_ERROR]: \"Проверьте правильность заполнения капчи\"}\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return <div className={`${style.Login} backgroundBlock`}>\r\n        <h3 className={style.header}>Авторизация</h3>\r\n        <Form onSubmit={onSubmit}\r\n              initialValues={{rememberMe: false}}\r\n        render={({handleSubmit, submitError})=>(\r\n            <form className={style.LoginForm} onSubmit={handleSubmit}>\r\n                <SpanField className={style.authInput} required={true} name={\"email\"} span={\"EMail\"} placeholder={\"EMail\"}/>\r\n                <SpanField type={\"password\"} className={style.authInput} required={true} name={\"password\"} span={\"Пароль\"} placeholder={\"Пароль\"}/>\r\n                {props.captchaUrl && <div><img alt={\"captcha\"} className={style.captcha} src={props.captchaUrl}/>\r\n                    <SpanField className={style.authInput} required={true} name={\"captcha\"}/></div>}\r\n                {submitError && <span className={\"errorMessage\"}>{submitError}</span>}\r\n                <div className={style.lastLine}><div><label>Запомнить меня </label><Field name=\"rememberMe\" component={\"input\"} type={\"checkbox\"} className={\"checkbox\"}/></div><div className={style.RegAuth}><a target={\"_blank\"} href={\"https://social-network.samuraijs.com/signUp\"}><div className={`Button ${style.submit}`}>Регистрация</div></a><input type={\"submit\"} className={`Button ${style.submit}`} value={\"Войти\"}/></div></div>\r\n            </form>\r\n        )}/>\r\n    </div>\r\n}\r\nexport default Login","import Login from './Login'\r\nimport {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport {compose} from \"redux\";\r\nimport {LoginToAPI} from \"../../Redux/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nclass LoginContainer extends React.Component{\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        if (this.props.isAuth){\r\n            return <Redirect to={\"/edit_profile\"}/>\r\n        }\r\n        return(\r\n            <Login {...this.props}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    userId: state.Auth.userId,\r\n    captchaUrl: state.Auth.captchaUrl\r\n})\r\nlet mapDispatchToProps = {\r\n    LoginToAPI\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(LoginContainer)"],"sourceRoot":""}