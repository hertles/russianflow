{"version":3,"sources":["components/EditProfile/EditProfile.module.css","components/EditProfile/EditProfile.jsx","hoc/AuthRedirect.jsx","components/EditProfile/EditProfileContainer.jsx"],"names":["module","exports","EditProfile","props","console","log","isFetching","className","style","Preloader","photo","photos","large","lookingForAJob","Button","text","fullName","profilePhoto","src","alt","onSubmit","ApplyChanges","initialValues","status","job","render","handleSubmit","form","name","component","type","autocomplete","validate","MaxLengthCreator","input","meta","statusInputBlock","info","statusInput","error","touched","autoComplete","placeholder","userId","buttonsBlock","apply","value","to","onClick","LogoutFromAPI","saved","mapStateToProps","state","isAuth","Auth","AuthRedirect","Component","connect","EditProfileContainer","React","memo","useState","setSaved","useLayoutEffect","GetUser","values","SetStatus","setTimeout","prevProps","nextProps","mapDispatchToProps","compose","Profile","followed"],"mappings":"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","file":"static/js/3.762cb826.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditProfile\":\"EditProfile_EditProfile__TB5L8\",\"profilePhoto\":\"EditProfile_profilePhoto__2gi28\",\"info\":\"EditProfile_info__XTu2R\",\"form\":\"EditProfile_form__2JE_-\",\"apply\":\"EditProfile_apply__1ocSw\",\"buttonsBlock\":\"EditProfile_buttonsBlock__2YDGf\",\"saved\":\"EditProfile_saved__2KSKv\",\"save\":\"EditProfile_save__1L6kA\",\"statusInputBlock\":\"EditProfile_statusInputBlock__38OcY\",\"statusInput\":\"EditProfile_statusInput__2l2bC\"};","import style from './EditProfile.module.css'\r\nimport React from \"react\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport Button from \"../Common/Button/Button\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field, Form} from 'react-final-form'\r\nimport {MaxLengthCreator} from \"../../validators/fieldValidators\";\r\n\r\n\r\nlet EditProfile = (props) => {\r\n    console.log(\"rendered\")\r\n    if (props.isFetching) {\r\n        return <div className={`${style.EditProfile} backgroundBlock`}><Preloader/></div>\r\n    }\r\n    let photo = props.photos.large\r\n    if (!props.photos.large) {\r\n        photo = 'https://gotrening.com/wp-content/uploads/2021/04/user.png'\r\n    }\r\n    let lookingForAJob = false\r\n    lookingForAJob = props.lookingForAJob ? 'Ищет работу' : 'Не ищет работу'\r\n    return <div className={`${style.EditProfile} backgroundBlock`}><Button text={props.fullName}/><img\r\n        className={style.profilePhoto} src={photo}\r\n        alt=\"your profile image\"/>\r\n\r\n        <Form onSubmit={props.ApplyChanges} initialValues={{status: props.status, job: props.lookingForAJob}} render={({handleSubmit}) => (\r\n            <form className={style.form} onSubmit={handleSubmit}>\r\n                <Field name=\"status\" component={\"input\"} type={\"text\"}\r\n                                                           autocomplete=\"off\" validate={MaxLengthCreator(30)}>\r\n                    {({ input, meta }) => (\r\n                        <div className={style.statusInputBlock}>\r\n                            <div className={style.info}>\r\n                                Статус: <input {...input} className={`${style.statusInput} ${meta.error && meta.touched && \"errorInput\"}`} type=\"text\" autoComplete=\"false\" placeholder=\"Ваш статус\" />\r\n                            </div>\r\n                            <div>\r\n                                {meta.error && meta.touched && <span className={`errorMessage ${style.info}`}>{meta.error}</span>}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Field>\r\n                <div className={style.info}>Мой ID: {props.userId}</div>\r\n                <div className={style.info}>Ищу работу: <Field className=\"checkbox\" name=\"job\" component=\"input\" type=\"checkbox\"/></div>\r\n                <div className={style.buttonsBlock}>\r\n                    <input type={\"submit\"} className={`${style.apply} Button`}\r\n                           value=\"Сохранить\"/>\r\n                    <NavLink to={'/user/' + props.userId}><input type={\"button\"} className={`${style.apply} Button`}\r\n                                                                 value=\"Посмотреть мой профиль\"/></NavLink>\r\n                    <Button className={`${style.apply} Button`} onClick={props.LogoutFromAPI} text={\"Выйти\"}/>\r\n                    {props.saved ? <div className={style.saved}>Сохранено</div> : <div></div>}\r\n                </div>\r\n            </form>\r\n        )}/>\r\n    </div>\r\n}\r\nexport default EditProfile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nlet mapStateToProps=(state)=>({\r\n    isAuth: state.Auth.isAuth\r\n})\r\nlet AuthRedirect = (Component) =>{\r\n    let RedirectContainer = (props) =>{\r\n        if (!props.isAuth){\r\n            return <Redirect to={'login'}/>\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps)(RedirectContainer)\r\n}\r\nexport default AuthRedirect","import EditProfile from './EditProfile'\r\nimport {connect} from 'react-redux'\r\nimport React, {useEffect, useLayoutEffect, useState} from 'react'\r\nimport {compose} from \"redux\";\r\nimport {GetUser, SetStatus} from \"../../Redux/ProfileReducer\";\r\nimport {LogoutFromAPI} from \"../../Redux/AuthReducer\";\r\nimport AuthRedirect from \"../../hoc/AuthRedirect\";\r\nconst EditProfileContainer = React.memo((props) => {\r\n    const [saved,setSaved] = useState(false)\r\n    let ApplyChanges = (values) => {\r\n        if (values.status!==props.status){\r\n            props.SetStatus(values.status)\r\n        }\r\n        setSaved(true)\r\n        setTimeout(()=>{\r\n            setSaved(false)\r\n        },2000)\r\n    }\r\n    useLayoutEffect(() => {\r\n        props.GetUser(props.userId)\r\n    }, []);\r\n\r\n    return(\r\n        <EditProfile {...props} saved={saved} ApplyChanges={ApplyChanges}/>\r\n    )\r\n},(prevProps,nextProps)=>prevProps.userId===nextProps.userId && prevProps.isFetching===nextProps.isFetching)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    fullName: state.Profile.fullName,\r\n    userId: state.Auth.userId,\r\n    followed: state.Profile.followed,\r\n    photos: state.Profile.photos,\r\n    lookingForAJob: state.Profile.lookingForAJob,\r\n    isFetching: state.Profile.isFetching,\r\n    status: state.Profile.status,\r\n})\r\nlet mapDispatchToProps = {\r\n    GetUser,\r\n    SetStatus,\r\n    LogoutFromAPI\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    AuthRedirect\r\n)(EditProfileContainer)"],"sourceRoot":""}